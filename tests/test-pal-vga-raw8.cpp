/**
 * @file   test-pal-vga-raw8.cpp
 * @brief  Test code for reading raw VGA 8-bit palette files.
 *
 * Copyright (C) 2010-2015 Adam Nielsen <malvineous@shikadi.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "test-image.hpp"

class test_pal_vga_raw8: public test_image
{
	public:
		test_pal_vga_raw8()
		{
			this->type = "pal-vga-raw8";
			this->hasMask = false;
			this->hasHitmask = false;
			this->dimensions = {0, 0};
		}

		void addTests()
		{
			this->test_image::addTests();

			this->sizedContent({0, 0}, ImageType::DefinitelyYes,
				this->initialstate(), createPalette_DefaultVGA());

			// c00: Initial state
			this->isInstance(ImageType::DefinitelyYes, this->initialstate());

			// c01: Wrong size
			this->isInstance(ImageType::DefinitelyNo, this->initialstate() + "test");
		}

		virtual std::string initialstate() const
		{
			return STRING_WITH_NULLS(
				// 0
				"\x00\x00\x00"
				"\x00\x00\xaa"
				"\x00\xaa\x00"
				"\x00\xaa\xaa"
				"\xaa\x00\x00"
				"\xaa\x00\xaa"
				"\xaa\x55\x00"
				"\xaa\xaa\xaa"
				"\x55\x55\x55"
				"\x55\x55\xff"
				"\x55\xff\x55"
				"\x55\xff\xff"
				"\xff\x55\x55"
				"\xff\x55\xff"
				"\xff\xff\x55"
				"\xff\xff\xff"
				"\x00\x00\x00"
				"\x14\x14\x14"
				"\x20\x20\x20"
				"\x2c\x2c\x2c"
				"\x38\x38\x38"
				"\x45\x45\x45"
				"\x51\x51\x51"
				"\x61\x61\x61"
				"\x71\x71\x71"
				"\x82\x82\x82"
				"\x92\x92\x92"
				"\xa2\xa2\xa2"
				"\xb6\xb6\xb6"
				"\xcb\xcb\xcb"
				"\xe3\xe3\xe3"
				"\xff\xff\xff"
				"\x00\x00\xff"
				"\x41\x00\xff"
				"\x7d\x00\xff"
				"\xbe\x00\xff"
				"\xff\x00\xff"
				"\xff\x00\xbe"
				"\xff\x00\x7d"
				"\xff\x00\x41"
				"\xff\x00\x00"
				"\xff\x41\x00"
				"\xff\x7d\x00"
				"\xff\xbe\x00"
				"\xff\xff\x00"
				"\xbe\xff\x00"
				"\x7d\xff\x00"
				"\x41\xff\x00"
				"\x00\xff\x00"
				"\x00\xff\x41"
				"\x00\xff\x7d"
				"\x00\xff\xbe"
				"\x00\xff\xff"
				"\x00\xbe\xff"
				"\x00\x7d\xff"
				"\x00\x41\xff"
				"\x7d\x7d\xff"
				"\x9e\x7d\xff"
				"\xbe\x7d\xff"
				"\xdf\x7d\xff"
				"\xff\x7d\xff"
				"\xff\x7d\xdf"
				"\xff\x7d\xbe"
				"\xff\x7d\x9e"
				"\xff\x7d\x7d"
				"\xff\x9e\x7d"
				"\xff\xbe\x7d"
				"\xff\xdf\x7d"
				"\xff\xff\x7d"
				"\xdf\xff\x7d"
				"\xbe\xff\x7d"
				"\x9e\xff\x7d"
				"\x7d\xff\x7d"
				"\x7d\xff\x9e"
				"\x7d\xff\xbe"
				"\x7d\xff\xdf"
				"\x7d\xff\xff"
				"\x7d\xdf\xff"
				"\x7d\xbe\xff"
				"\x7d\x9e\xff"
				"\xb6\xb6\xff"
				"\xc7\xb6\xff"
				"\xdb\xb6\xff"
				"\xeb\xb6\xff"
				"\xff\xb6\xff"
				"\xff\xb6\xeb"
				"\xff\xb6\xdb"
				"\xff\xb6\xc7"
				"\xff\xb6\xb6"
				"\xff\xc7\xb6"
				"\xff\xdb\xb6"
				"\xff\xeb\xb6"
				"\xff\xff\xb6"
				"\xeb\xff\xb6"
				"\xdb\xff\xb6"
				"\xc7\xff\xb6"
				"\xb6\xff\xb6"
				"\xb6\xff\xc7"
				"\xb6\xff\xdb"
				"\xb6\xff\xeb"
				"\xb6\xff\xff"
				"\xb6\xeb\xff"
				"\xb6\xdb\xff"
				"\xb6\xc7\xff"
				"\x00\x00\x71"
				"\x1c\x00\x71"
				"\x38\x00\x71"
				"\x55\x00\x71"
				"\x71\x00\x71"
				"\x71\x00\x55"
				"\x71\x00\x38"
				"\x71\x00\x1c"
				"\x71\x00\x00"
				"\x71\x1c\x00"
				"\x71\x38\x00"
				"\x71\x55\x00"
				"\x71\x71\x00"
				"\x55\x71\x00"
				"\x38\x71\x00"
				"\x1c\x71\x00"
				"\x00\x71\x00"
				"\x00\x71\x1c"
				"\x00\x71\x38"
				"\x00\x71\x55"
				"\x00\x71\x71"
				"\x00\x55\x71"
				"\x00\x38\x71"
				"\x00\x1c\x71"
				"\x38\x38\x71"
				"\x45\x38\x71"
				"\x55\x38\x71"
				"\x61\x38\x71"
				"\x71\x38\x71"
				"\x71\x38\x61"
				"\x71\x38\x55"
				"\x71\x38\x45"
				"\x71\x38\x38"
				"\x71\x45\x38"
				"\x71\x55\x38"
				"\x71\x61\x38"
				"\x71\x71\x38"
				"\x61\x71\x38"
				"\x55\x71\x38"
				"\x45\x71\x38"
				"\x38\x71\x38"
				"\x38\x71\x45"
				"\x38\x71\x55"
				"\x38\x71\x61"
				"\x38\x71\x71"
				"\x38\x61\x71"
				"\x38\x55\x71"
				"\x38\x45\x71"
				"\x51\x51\x71"
				"\x59\x51\x71"
				"\x61\x51\x71"
				"\x69\x51\x71"
				"\x71\x51\x71"
				"\x71\x51\x69"
				"\x71\x51\x61"
				"\x71\x51\x59"
				"\x71\x51\x51"
				"\x71\x59\x51"
				"\x71\x61\x51"
				"\x71\x69\x51"
				"\x71\x71\x51"
				"\x69\x71\x51"
				"\x61\x71\x51"
				"\x59\x71\x51"
				"\x51\x71\x51"
				"\x51\x71\x59"
				"\x51\x71\x61"
				"\x51\x71\x69"
				"\x51\x71\x71"
				"\x51\x69\x71"
				"\x51\x61\x71"
				"\x51\x59\x71"
				"\x00\x00\x41"
				"\x10\x00\x41"
				"\x20\x00\x41"
				"\x30\x00\x41"
				"\x41\x00\x41"
				"\x41\x00\x30"
				"\x41\x00\x20"
				"\x41\x00\x10"
				"\x41\x00\x00"
				"\x41\x10\x00"
				"\x41\x20\x00"
				"\x41\x30\x00"
				"\x41\x41\x00"
				"\x30\x41\x00"
				"\x20\x41\x00"
				"\x10\x41\x00"
				"\x00\x41\x00"
				"\x00\x41\x10"
				"\x00\x41\x20"
				"\x00\x41\x30"
				"\x00\x41\x41"
				"\x00\x30\x41"
				"\x00\x20\x41"
				"\x00\x10\x41"
				"\x20\x20\x41"
				"\x28\x20\x41"
				"\x30\x20\x41"
				"\x38\x20\x41"
				"\x41\x20\x41"
				"\x41\x20\x38"
				"\x41\x20\x30"
				"\x41\x20\x28"
				"\x41\x20\x20"
				"\x41\x28\x20"
				"\x41\x30\x20"
				"\x41\x38\x20"
				"\x41\x41\x20"
				"\x38\x41\x20"
				"\x30\x41\x20"
				"\x28\x41\x20"
				"\x20\x41\x20"
				"\x20\x41\x28"
				"\x20\x41\x30"
				"\x20\x41\x38"
				"\x20\x41\x41"
				"\x20\x38\x41"
				"\x20\x30\x41"
				"\x20\x28\x41"
				"\x2c\x2c\x41"
				"\x30\x2c\x41"
				"\x34\x2c\x41"
				"\x3c\x2c\x41"
				"\x41\x2c\x41"
				"\x41\x2c\x3c"
				"\x41\x2c\x34"
				"\x41\x2c\x30"
				"\x41\x2c\x2c"
				"\x41\x30\x2c"
				"\x41\x34\x2c"
				"\x41\x3c\x2c"
				"\x41\x41\x2c"
				"\x3c\x41\x2c"
				"\x34\x41\x2c"
				"\x30\x41\x2c"
				"\x2c\x41\x2c"
				"\x2c\x41\x30"
				"\x2c\x41\x34"
				"\x2c\x41\x3c"
				"\x2c\x41\x41"
				"\x2c\x3c\x41"
				"\x2c\x34\x41"
				"\x2c\x30\x41"
				"\x00\x00\x00"
				"\x00\x00\x00"
				"\x00\x00\x00"
				"\x00\x00\x00"
				"\x00\x00\x00"
				"\x00\x00\x00"
				"\x00\x00\x00"
				"\x00\x00\x00"
				// 256
			);
		}

		/// Test that palette values larger than 0x3F get written as 0x3F
};

IMPLEMENT_TESTS(pal_vga_raw8);
